import "StdLibrary.fcc" as stdLibrary
import "EditorGenLib.fcc" as editorGenLib
import "./PlayerZoneSelectionHUD.fcg" as PlayerZoneSelectionHUD
import "Hud.fcc" as hud
import "AI.fcc" as ai
import "Player.fcc" as player
import "./GlobalZoneSelection.fcg" as GlobalZoneSelection
import MyResources from "EditorGenLib.fcc"
import "./GlobalDebug.fcg" as GlobalDebug
import "./GlobalZoneMobManager.fcg" as GlobalZoneMobManager

graph PlayerZoneSelection {
    _buttonZoneMap Map<entity<HudButtonWidget>, ZoneEnum>
    _selectedZone string
    _hasInit bool
    _isTeleporting bool

    func InitZoneSelection(){
        if(!_hasInit){
            _buttonZoneMap = Map<entity<HudButtonWidget>, ZoneEnum>{}
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_000)] = ZoneEnum.LVL000
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_010)] = ZoneEnum.LVL010
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_020)] = ZoneEnum.LVL020
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_030)] = ZoneEnum.LVL030
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_040)] = ZoneEnum.LVL040
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_050)] = ZoneEnum.LVL050
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_060)] = ZoneEnum.LVL060
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_070)] = ZoneEnum.LVL070
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_080)] = ZoneEnum.LVL080
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_ZONE_090)] = ZoneEnum.LVL090
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_WB_020)] = ZoneEnum.WB020
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_WB_040)] = ZoneEnum.WB040
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_WB_060)] = ZoneEnum.WB060
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_WB_080)] = ZoneEnum.WB080
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_WB_100)] = ZoneEnum.WB100
            _buttonZoneMap[thisEntity<PlayerZoneSelectionHUD>.GetZoneSelectionHUDWidget(EResource_UI_ZONE_SELECTION.BTN_WB_F)] = ZoneEnum.WBF
            _hasInit = true
        }
    }

    func ResetZoneSelecion(){
        _selectedZone = ZoneEnum.NONE
    }

    func BeginZoneSelection(){
        InitZoneSelection()
        ResetZoneSelecion()
        // Show HUD
        thisEntity<PlayerZoneSelectionHUD>.DisplayZoneSelectionHUD()
    }

    func EndZoneSelection(){
        // HideHUD
        thisEntity<PlayerZoneSelectionHUD>.CloseZoneSelectionHUD()
    }

    func ConfirmZoneSelection(){
        if(_selectedZone == ZoneEnum.NONE){
            ShowTips(thisEntity<Player>, MyResources.Localizations["ZONE_SELECTION_NO_ZONE_SELECTED"], ColorRGB(255, 255, 255), 3000)
            return 
        }

        if(_isTeleporting){
            ShowTips(thisEntity<Player>, MyResources.Localizations["ZONE_SELECTION_IS_TELEPORTING"], ColorRGB(255, 255, 255), 3000)
            return
        }

        // Visual effects
        SetTeleportingVFX()

        // Teleport player to someplace
        start TeleportPlayerToZone() 
        
        EndZoneSelection()
    }

    func SetTeleportingVFX(){

    }

    func StopPlayerFromTeleporting(){
        _isTeleporting = false
    }

    async func TeleportPlayerToZone(){
        _isTeleporting = true

        if(globalEntity<GlobalDebug>.IsShortTeleport){
            WaitForNextFrame()
        } else {
            WaitForSeconds(5000)
        }

        // This should only be possible if player died before being teleported.
        if(!_isTeleporting){
            return
        }

        // Check for distance to start spawning zombie
        globalEntity<GlobalZoneMobManager>.NotifyDistanceChecking(thisEntity<Player>)

        Teleport(thisEntity<Player>, globalEntity<GlobalZoneSelection>.GetZoneTeleportLocation(_selectedZone) + Vector3{0, 3, 0}, Vector3{0, 0, 0})
        
        StopPlayerFromTeleporting()
    }

    func SetSelectedZone(button entity<HudButtonWidget>){
        _selectedZone = _buttonZoneMap[button]
        LogInfo("[PlayerZoneSelection] _selectedZone: " + _selectedZone)
    }

    func GetSelectedZone() int{
        return _selectedZone
    }
}