import "StdLibrary.fcc" as stdLibrary
import "EditorGenLib.fcc" as editorGenLib
import "Combat.fcc" as combat
import "AI.fcc" as ai
import "./ZoneBossManager.fcg" as ZoneBossManager
import "./PlayerLevel.fcg" as PlayerLevel
import "./PlayerInventory.fcg" as PlayerInventory
import "./PlayerMoney.fcg" as PlayerMoney

graph Boss {
    _spawner entity<BossSpawner>
    _expAmount int
    _type int

    event OnAwake() {
    
    }

    event OnTakeDamage(attacker entity<Entity>,
      damageType DamageType,
      value int,
      beDamagedPart HitBodyPart) {
    
    }

    event OnBeKilled(attacker entity<Entity>,
      damageType DamageType,
      beDamagedPart HitBodyPart) {
        _spawner<ZoneBossManager>.RemoveBossFromList(thisEntity<Entity>)    
        attacker<PlayerLevel>.IncreaseExpByAmount(_expAmount)
        attacker<PlayerInventory>.IncreaseItemByAmount(MaterialEnum.BOSS_ESSENCE, 1)
    }

    event Boss_OnEliminated(param1 int) {
      LogInfo("[Boss] Boss is ded: " + param1)
      _spawner<ZoneBossManager>.RemoveBossFromList(thisEntity<Entity>)    
      for key, player in GetAllPlayers(){
        player<PlayerLevel>.IncreaseExpByAmount(_expAmount)
        player<PlayerMoney>.AddMoney(GameMoneyType.COIN, 1000)
        player<PlayerInventory>.IncreaseItemByAmount(MaterialEnum.ZOMBIE_ESSENCE, 100)
        player<PlayerInventory>.IncreaseItemByAmount(MaterialEnum.BOSS_ESSENCE, 2)
      }

    }
    func SetSpawner(spawner entity<BossSpawner>){
        _spawner = spawner
    }

    func SetBossType(bossType int){
        _type = bossType
    }

    func GetBossType() int{
        return _type
    }
}