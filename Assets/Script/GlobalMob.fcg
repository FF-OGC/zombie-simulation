import "List.fcc" as List
import "StdLibrary.fcc" as stdLibrary
import "EditorGenLib.fcc" as editorGenLib
import "AI.fcc" as ai
import "Database.fcc" as database
import Resources from "EditorGenLib.fcc"

graph GlobalMob {
    LVL_MAX int = 100
    LVL_MIN int = 0

    _typeStatList List<List<object>>
    _typeDifficultyLvlStatMap Map<int, Map<string, Map<int, Map<int, float>>>>
    _hasInit bool

    func InitGlobalMob(){
        if(!_hasInit){
            SetTypeStatMultMap()
            _hasInit = true
        }
    }

    func SetTypeStatMultMap(){
        _typeDifficultyLvlStatMap = Map<int, Map<string, Map<int, Map<int, float>>>>{}
        _typeStatList = ReadCSV(Resources.CSV[EResource_CSV.ZOMBIE_FACT])

        var typeList = List<int>{
            AIType.UGCAI,
            AIType.WoodCutZombie,
            AIType.TankZombie,
            AIType.ThrowZombie,
            AIType.ThrowRedZombie,
            AIType.ExplosiveZombie}

        var difficultyList = List<string>{
            DifficultyEnum.DIF_LVL_1}
        
        var lvlList = List<int>{}

        for i = LVL_MIN, LVL_MAX, 1{
            Append(lvlList, i)
        }

        var statTypeList = List<int>{
            StatType.ATK,
            StatType.MAX_HP,
            StatType.SPEED,
            StatType.CHASE_VICINITY,
            StatType.EXP}

        for i = 0, List.Length(typeList), 1{
            var zombieType = typeList[i]
            _typeDifficultyLvlStatMap[zombieType] = Map<string, Map<int, Map<int, float>>>{}
            var difficultyLvlStatMap = _typeDifficultyLvlStatMap[zombieType]
            for j = 0, List.Length(difficultyList), 1{
                var difficulty = difficultyList[j]
                difficultyLvlStatMap[difficulty] = Map<int, Map<int, float>>{}
                var lvlStatMap = difficultyLvlStatMap[difficulty]
                for k = 0, List.Length(lvlList), 1{
                    var lvl = lvlList[k]
                    lvlStatMap[lvl] = Map<int, float>{}
                }
            }
        }
        LogInfo("[GlobalMob] difficultyLvlStatMap: " + _typeDifficultyLvlStatMap)

        LogInfo("[GlobalMob] _typeStatList: " +  List.Length(_typeStatList)+ " " + _typeStatList )
        for i = 0, List.Length(_typeStatList), 1{
            var typeStat = _typeStatList[i]
            var zombieType = typeStat[1] as int
            var difficultyType = typeStat[2] as int
            var lvl = typeStat[4] as int
            var atk = typeStat[5] as float
            var hp = typeStat[6] as float
            var speed = typeStat[7] as float
            var chaseVicinity = typeStat[8] as float
            var exp = typeStat[9] as float

            var statMap = Map<int, float>{}
            statMap[StatType.ATK] = atk
            statMap[StatType.MAX_HP] = hp
            statMap[StatType.SPEED] = speed
            statMap[StatType.CHASE_VICINITY] = chaseVicinity
            statMap[StatType.EXP] = exp
            LogInfo("[GlobalMob] statMap: " + statMap)
            var difficultyLvlStatMap = _typeDifficultyLvlStatMap[zombieType]
            LogInfo("[GlobalMap] difficultyLvlStatMap: " + difficultyType + " " + difficultyLvlStatMap)
            var lvlStatMap = difficultyLvlStatMap[difficultyType]
            lvlStatMap[lvl] = statMap
            LogInfo("[GlobalMap] lvlStatMap: " + lvl + " " + lvlStatMap)
            difficultyLvlStatMap[difficultyType] = lvlStatMap
            _typeDifficultyLvlStatMap[zombieType] = difficultyLvlStatMap
        }
    }

    func GetMobStat(zombieType int, difficultyEnum string, lvl int, statEnum int) float{
        InitGlobalMob()

        var difficultyLvlStatMap = _typeDifficultyLvlStatMap[zombieType]
        var lvlStatMap = difficultyLvlStatMap[difficultyEnum]
        var statMap = lvlStatMap[lvl]
        LogInfo("[GlobalMob] difficultyLvlStatMap: " + statMap + " " + difficultyLvlStatMap)
        return statMap[statEnum]
    }
    
}