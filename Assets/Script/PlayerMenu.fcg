import "StdLibrary.fcc" as stdLibrary
import "EditorGenLib.fcc" as editorGenLib
import "Hud.fcc" as hud
import "AI.fcc" as ai
import Resources from "EditorGenLib.fcc"
import "./HUDUtil.fcg" as HUDUtil
import "Playable.fcc" as playable 
import "./PlayerStat.fcg" as PlayerStat
import "./GlobalZoneBossManager.fcg" as GlobalZoneBossManager
import MyResources from "EditorGenLib.fcc"

graph PlayerMenu {
    NOTI_ORIGINAL_COLOR = #000000FF
    NOTI_TWEEN_COLOR = #00000000
    NOTI_ORIGINAL_ALPHA = 1.0
    NOTI_TWEEN_ALPHA = 0.4
    NOTI_TWEEN_DURATION = 500 // 0.5 second
    _menuHUD entity<CustomHud>
    _bossNotiTween entity<Tween>
    _statNotiTween entity<Tween>
    _craftingNotiTween entity<Tween>

    func InitMenuHUD(){
        if(_menuHUD == nil){
            _menuHUD = HUDUtil.CreateCustomHUD(thisEntity<Player>, EResource_UI.MENU, 4)
            LogInfo("[PlayerMenuHUD] _menuHUD: " + _menuHUD)
            _menuHUD<CustomHud>.Visibility = false
            SetNotiTween()
        }
    }

    func DisplayMenuHUD(){
        InitMenuHUD()
        ResetMenuHUD()
        if(!_menuHUD<CustomHud>.Visibility){
            _menuHUD<CustomHud>.Visibility = true         
        }
    }

    func ResetMenuHUD(){
        UpdateNotiTween()
    }

    func SetNotiTween(){
        var imgBossNoti = GetMenuHUDWidget(EResource_UI_MENU.IMG_BOSS_NOTI)
        var imgStatNoti = GetMenuHUDWidget(EResource_UI_MENU.IMG_STAT_NOTI)
        var imgCraftingNoti = GetMenuHUDWidget(EResource_UI_MENU.IMG_CRAFTING_NOTI)
        var curve = CreateTweenCurve(List<float>{0, 0, 1, 1})
        
        CreateTween(imgBossNoti, HudImageWidget.Alpha, NOTI_ORIGINAL_ALPHA, NOTI_TWEEN_ALPHA, TweenStyle.PingPong, curve, NOTI_TWEEN_DURATION, out var notiBossTween, false)
        _bossNotiTween = notiBossTween

        CreateTween(imgStatNoti, HudImageWidget.Alpha, NOTI_ORIGINAL_ALPHA, NOTI_TWEEN_ALPHA, TweenStyle.PingPong, curve, NOTI_TWEEN_DURATION, out var notiStatTween,false)
        _statNotiTween = notiStatTween

        CreateTween(imgCraftingNoti, HudImageWidget.Alpha, NOTI_ORIGINAL_ALPHA, NOTI_TWEEN_ALPHA, TweenStyle.PingPong, curve, NOTI_TWEEN_DURATION, out var notiCraftingTween, false)
        _craftingNotiTween = notiCraftingTween
    }

    func CloseMenuHUD(){
        if(_menuHUD != nil){
            _menuHUD<CustomHud>.Visibility = false
        }
    }

    func DeleteMenuHUD(){
        DeleteEntity(_menuHUD)
    }

    func UpdateNotiTween(){
        UpdateStatNoti()
        UpdateBossNoti()
    }

    func UpdateStatNoti(){
        var imgStatNoti = GetMenuHUDWidget(EResource_UI_MENU.IMG_STAT_NOTI)
        var remainingStatPoint = thisEntity<PlayerStat>.GetRemainingStatPoint()
        
        if(remainingStatPoint < 1){
            Pause(_statNotiTween)
            imgStatNoti<HudWidget>.Active = false
            return
        }

        Play(_statNotiTween, false)
        imgStatNoti<HudWidget>.Active = true
    }

    func UpdateBossNoti(){
        var imgBossNoti = GetMenuHUDWidget(EResource_UI_MENU.IMG_BOSS_NOTI)   
        var isBossOnField = globalEntity<GlobalZoneBossManager>.IsBossOnField()

        if(!isBossOnField){
            Pause(_bossNotiTween)
            imgBossNoti<HudWidget>.Active = false
            return
        }

        Play(_bossNotiTween, false)
        imgBossNoti<HudWidget>.Active = true
    }

    func SetActivityCraftingNoti(active bool){
        var imgCraftingNoti = GetMenuHUDWidget(EResource_UI_MENU.IMG_CRAFTING_NOTI)
        if(active){
            imgCraftingNoti<HudWidget>.Active = false
            Pause(_craftingNotiTween)
        } else {
            imgCraftingNoti<HudWidget>.Active = true
            Play(_craftingNotiTween, false)
        }
    }

    func GetMenuHUDWidget(eResourceUIMenu string) entity<HudWidget>{
        return GetWidgetFromCustomHud(thisEntity<Player>, _menuHUD, Resources.UI_MENU[eResourceUIMenu])
    }

    event PlayerCraftHUD_HasNewUnlockable(unlockableWeapon List<string>) {
        SetActivityCraftingNoti(true)        
    }
}